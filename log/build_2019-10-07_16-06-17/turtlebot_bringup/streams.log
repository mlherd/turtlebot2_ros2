Invoking command in '/home/turtlebot2/Desktop/turtlebot2_ros2/build/turtlebot_bringup': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/turtlebot2/ros2_ws/install/ros2bag:/home/turtlebot2/ros2_ws/install/topic_monitor:/home/turtlebot2/ros2_ws/install/sros2:/home/turtlebot2/ros2_ws/install/rqt:/home/turtlebot2/ros2_ws/install/rqt_graph:/home/turtlebot2/ros2_ws/install/rqt_gui_py:/home/turtlebot2/ros2_ws/install/rqt_gui:/home/turtlebot2/ros2_ws/install/ros2topic:/home/turtlebot2/ros2_ws/install/ros2test:/home/turtlebot2/ros2_ws/install/ros2component:/home/turtlebot2/ros2_ws/install/ros2param:/home/turtlebot2/ros2_ws/install/ros2lifecycle:/home/turtlebot2/ros2_ws/install/ros2service:/home/turtlebot2/ros2_ws/install/ros2srv:/home/turtlebot2/ros2_ws/install/ros2run:/home/turtlebot2/ros2_ws/install/ros2launch:/home/turtlebot2/ros2_ws/install/ros2pkg:/home/turtlebot2/ros2_ws/install/ros2node:/home/turtlebot2/ros2_ws/install/ros2multicast:/home/turtlebot2/ros2_ws/install/ros2msg:/home/turtlebot2/ros2_ws/install/ros2action:/home/turtlebot2/ros2_ws/install/ros2cli:/home/turtlebot2/ros2_ws/install/quality_of_service_demo_py:/home/turtlebot2/ros2_ws/install/launch_testing_ros:/home/turtlebot2/ros2_ws/install/launch_ros:/home/turtlebot2/ros2_ws/install/examples_rclpy_minimal_subscriber:/home/turtlebot2/ros2_ws/install/examples_rclpy_minimal_service:/home/turtlebot2/ros2_ws/install/examples_rclpy_minimal_publisher:/home/turtlebot2/ros2_ws/install/examples_rclpy_minimal_client:/home/turtlebot2/ros2_ws/install/examples_rclpy_minimal_action_server:/home/turtlebot2/ros2_ws/install/examples_rclpy_minimal_action_client:/home/turtlebot2/ros2_ws/install/examples_rclpy_executors:/home/turtlebot2/ros2_ws/install/demo_nodes_py:/home/turtlebot2/ros2_ws/install/ament_uncrustify:/home/turtlebot2/ros2_ws/install/test_launch_ros:/home/turtlebot2/ros2_ws/install/rosidl_runtime_py:/home/turtlebot2/ros2_ws/install/launch_testing:/home/turtlebot2/ros2_ws/install/launch:/home/turtlebot2/ros2_ws/install/osrf_pycommon:/home/turtlebot2/ros2_ws/install/ament_xmllint:/home/turtlebot2/ros2_ws/install/ament_pyflakes:/home/turtlebot2/ros2_ws/install/ament_pep8:/home/turtlebot2/ros2_ws/install/ament_pep257:/home/turtlebot2/ros2_ws/install/ament_pclint:/home/turtlebot2/ros2_ws/install/ament_package:/home/turtlebot2/ros2_ws/install/ament_lint_cmake:/home/turtlebot2/ros2_ws/install/ament_flake8:/home/turtlebot2/ros2_ws/install/ament_copyright:/home/turtlebot2/ros2_ws/install/ament_lint:/home/turtlebot2/ros2_ws/install/ament_index_python:/home/turtlebot2/ros2_ws/install/ament_cpplint:/home/turtlebot2/ros2_ws/install/ament_cppcheck:/home/turtlebot2/ros2_ws/install/ament_clang_tidy:/home/turtlebot2/ros2_ws/install/ament_clang_format /usr/bin/cmake --build /home/turtlebot2/Desktop/turtlebot2_ros2/build/turtlebot_bringup -- -j4 -l4
[  5%] Built target Transport
[  8%] Built target Thread
[ 24%] Built target kobuki
[ 28%] Built target DockingController
[ 35%] Built target SerialPort
[ 42%] Built target KobukiBase
[ 45%] Built target Translator
[ 59%] Built target Kobuki_impl
[35m[1mScanning dependencies of target Turtlebot[0m
[35m[1mScanning dependencies of target turtlebot2[0m
[ 77%] Built target kobukicwrapper
[ 78%] [32mBuilding CXX object CMakeFiles/Turtlebot.dir/src/Turtlebot.cpp.o[0m
[ 80%] [32mBuilding CXX object CMakeFiles/turtlebot2.dir/src/Turtlebot.cpp.o[0m
[ 82%] [32mBuilding CXX object CMakeFiles/turtlebot2.dir/src/turtlebot2.cpp.o[0m
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/turtlebot2.cpp:1:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:[m[K In constructor â€˜[01m[KTurtlebot::Turtlebot()[m[Kâ€™:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:104:5:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::callback_group::CallbackGroup::SharedPtr, bool, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = Turtlebot::Turtlebot()::<lambda(geometry_msgs::msg::Twist_<std::allocator<void> >::SharedPtr)>; Alloc = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t; rclcpp::callback_group::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::callback_group::CallbackGroup>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™ is deprecated: use create_subscription(const std::string &, const rclcpp::QoS &, CallbackT, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
     [01;35m[K)[m[K;
     [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/turtlebot2.cpp:1[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:139:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_subscription(
 [01;36m[K^~~~[m[K
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/turtlebot2.cpp:1:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:106:66:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t][m[Kâ€™ is deprecated: use create_publisher(const std::string &, const rclcpp::QoS &, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
     odom = this->create_publisher<nav_msgs::msg::Odometry>("odom"[01;35m[K)[m[K;
                                                                  [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/turtlebot2.cpp:1[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:96:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_publisher(
 [01;36m[K^~~~[m[K
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/turtlebot2.cpp:1:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:109:67:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t][m[Kâ€™ is deprecated: use create_publisher(const std::string &, const rclcpp::QoS &, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
     inertial = this->create_publisher<sensor_msgs::msg::Imu>("imu"[01;35m[K)[m[K;
                                                                   [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/turtlebot2.cpp:1[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:96:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_publisher(
 [01;36m[K^~~~[m[K
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/turtlebot2.cpp:1:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:112:91:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>) [with MessageT = sensor_msgs::msg::BatteryState_<std::allocator<void> >; AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<sensor_msgs::msg::BatteryState_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t][m[Kâ€™ is deprecated: use create_publisher(const std::string &, const rclcpp::QoS &, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
     battery_state = this->create_publisher<sensor_msgs::msg::BatteryState>("battery_state"[01;35m[K)[m[K;
                                                                                           [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/turtlebot2.cpp:1[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:96:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_publisher(
 [01;36m[K^~~~[m[K
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/turtlebot2.cpp:1:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:115:85:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<sensor_msgs::msg::JointState_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t][m[Kâ€™ is deprecated: use create_publisher(const std::string &, const rclcpp::QoS &, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
     joint_state = this->create_publisher<sensor_msgs::msg::JointState>("joint_state"[01;35m[K)[m[K;
                                                                                     [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/turtlebot2.cpp:1[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:96:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_publisher(
 [01;36m[K^~~~[m[K
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:[m[K In constructor â€˜[01m[KTurtlebot::Turtlebot()[m[Kâ€™:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:104:5:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::callback_group::CallbackGroup::SharedPtr, bool, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = Turtlebot::Turtlebot()::<lambda(geometry_msgs::msg::Twist_<std::allocator<void> >::SharedPtr)>; Alloc = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t; rclcpp::callback_group::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::callback_group::CallbackGroup>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™ is deprecated: use create_subscription(const std::string &, const rclcpp::QoS &, CallbackT, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
     [01;35m[K)[m[K;
     [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:139:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_subscription(
 [01;36m[K^~~~[m[K
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:106:66:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t][m[Kâ€™ is deprecated: use create_publisher(const std::string &, const rclcpp::QoS &, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
     odom = this->create_publisher<nav_msgs::msg::Odometry>("odom"[01;35m[K)[m[K;
                                                                  [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:96:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_publisher(
 [01;36m[K^~~~[m[K
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:[m[K In constructor â€˜[01m[KTurtlebot::Turtlebot()[m[Kâ€™:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:104:5:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::callback_group::CallbackGroup::SharedPtr, bool, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = geometry_msgs::msg::Twist_<std::allocator<void> >; CallbackT = Turtlebot::Turtlebot()::<lambda(geometry_msgs::msg::Twist_<std::allocator<void> >::SharedPtr)>; Alloc = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Twist_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t; rclcpp::callback_group::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::callback_group::CallbackGroup>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Twist_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™ is deprecated: use create_subscription(const std::string &, const rclcpp::QoS &, CallbackT, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
     [01;35m[K)[m[K;
     [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:139:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_subscription(
 [01;36m[K^~~~[m[K
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:106:66:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t][m[Kâ€™ is deprecated: use create_publisher(const std::string &, const rclcpp::QoS &, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
     odom = this->create_publisher<nav_msgs::msg::Odometry>("odom"[01;35m[K)[m[K;
                                                                  [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:96:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_publisher(
 [01;36m[K^~~~[m[K
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:109:67:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t][m[Kâ€™ is deprecated: use create_publisher(const std::string &, const rclcpp::QoS &, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
     inertial = this->create_publisher<sensor_msgs::msg::Imu>("imu"[01;35m[K)[m[K;
                                                                   [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:96:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_publisher(
 [01;36m[K^~~~[m[K
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:112:91:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>) [with MessageT = sensor_msgs::msg::BatteryState_<std::allocator<void> >; AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<sensor_msgs::msg::BatteryState_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t][m[Kâ€™ is deprecated: use create_publisher(const std::string &, const rclcpp::QoS &, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
 tate = this->create_publisher<sensor_msgs::msg::BatteryState>("battery_state"[01;35m[K)[m[K;
                                                                              [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:96:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_publisher(
 [01;36m[K^~~~[m[K
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:115:85:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<sensor_msgs::msg::JointState_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t][m[Kâ€™ is deprecated: use create_publisher(const std::string &, const rclcpp::QoS &, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
 nt_state = this->create_publisher<sensor_msgs::msg::JointState>("joint_state"[01;35m[K)[m[K;
                                                                              [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:109:67:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t][m[Kâ€™ is deprecated: use create_publisher(const std::string &, const rclcpp::QoS &, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
     inertial = this->create_publisher<sensor_msgs::msg::Imu>("imu"[01;35m[K)[m[K;
                                                                   [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:96:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_publisher(
 [01;36m[K^~~~[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:96:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_publisher(
 [01;36m[K^~~~[m[K
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:112:91:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>) [with MessageT = sensor_msgs::msg::BatteryState_<std::allocator<void> >; AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<sensor_msgs::msg::BatteryState_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t][m[Kâ€™ is deprecated: use create_publisher(const std::string &, const rclcpp::QoS &, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
     battery_state = this->create_publisher<sensor_msgs::msg::BatteryState>("battery_state"[01;35m[K)[m[K;
                                                                                           [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:96:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_publisher(
 [01;36m[K^~~~[m[K
In file included from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5:0[m[K:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:115:85:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; AllocatorT = std::allocator<void>; PublisherT = rclcpp::Publisher<sensor_msgs::msg::JointState_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_t][m[Kâ€™ is deprecated: use create_publisher(const std::string &, const rclcpp::QoS &, ...) instead [[01;35m[K-Wdeprecated-declarations[m[K]
     joint_state = this->create_publisher<sensor_msgs::msg::JointState>("joint_state"[01;35m[K)[m[K;
                                                                                     [01;35m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node.hpp:1206:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/node_impl.hpp:96:1:[m[K [01;36m[Knote: [m[Kdeclared here
 [01;36m[KNode[m[K::create_publisher(
 [01;36m[K^~~~[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:[m[K In member function â€˜[01m[Kvoid Turtlebot::publishJointStates()[m[Kâ€™:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:99:41:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kdelta_seconds[m[Kâ€™ was not declared in this scope
  joint_state_msg.header.stamp.sec     = [01;31m[Kdelta_seconds[m[K.count();
                                         [01;31m[K^~~~~~~~~~~~~[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:103:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kname[m[Kâ€™
  joint_state_msg.[01;31m[Kname[m[K.push_back("left_wheel");
                  [01;31m[K^~~~[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:104:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kname[m[Kâ€™
  joint_state_msg.[01;31m[Kname[m[K.push_back("right_wheel");
                  [01;31m[K^~~~[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:105:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kposition[m[Kâ€™; did you mean â€˜[01m[Klocation[m[Kâ€™?
  joint_state_msg.[01;31m[Kposition[m[K.push_back(left_wheel_radians);
                  [01;31m[K^~~~~~~~[m[K
                  [32m[Klocation[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:106:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kposition[m[Kâ€™; did you mean â€˜[01m[Klocation[m[Kâ€™?
  joint_state_msg.[01;31m[Kposition[m[K.push_back(right_wheel_radians);
                  [01;31m[K^~~~~~~~[m[K
                  [32m[Klocation[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:107:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kvelocity[m[Kâ€™; did you mean â€˜[01m[Kcapacity[m[Kâ€™?
  joint_state_msg.[01;31m[Kvelocity[m[K.push_back(0.0);
                  [01;31m[K^~~~~~~~[m[K
                  [32m[Kcapacity[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:108:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kvelocity[m[Kâ€™; did you mean â€˜[01m[Kcapacity[m[Kâ€™?
  joint_state_msg.[01;31m[Kvelocity[m[K.push_back(0.0);
                  [01;31m[K^~~~~~~~[m[K
                  [32m[Kcapacity[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:109:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Keffort[m[Kâ€™
  joint_state_msg.[01;31m[Keffort[m[K.push_back(0);
                  [01;31m[K^~~~~~[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:110:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Keffort[m[Kâ€™
  joint_state_msg.[01;31m[Keffort[m[K.push_back(0);
                  [01;31m[K^~~~~~[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:[m[K In member function â€˜[01m[Kvoid Turtlebot::publishJointStates()[m[Kâ€™:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:99:41:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kdelta_seconds[m[Kâ€™ was not declared in this scope
  joint_state_msg.header.stamp.sec     = [01;31m[Kdelta_seconds[m[K.count();
                                         [01;31m[K^~~~~~~~~~~~~[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:103:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kname[m[Kâ€™
  joint_state_msg.[01;31m[Kname[m[K.push_back("left_wheel");
                  [01;31m[K^~~~[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:104:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kname[m[Kâ€™
  joint_state_msg.[01;31m[Kname[m[K.push_back("right_wheel");
                  [01;31m[K^~~~[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:105:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kposition[m[Kâ€™; did you mean â€˜[01m[Klocation[m[Kâ€™?
  joint_state_msg.[01;31m[Kposition[m[K.push_back(left_wheel_radians);
                  [01;31m[K^~~~~~~~[m[K
                  [32m[Klocation[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:106:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kposition[m[Kâ€™; did you mean â€˜[01m[Klocation[m[Kâ€™?
  joint_state_msg.[01;31m[Kposition[m[K.push_back(right_wheel_radians);
                  [01;31m[K^~~~~~~~[m[K
                  [32m[Klocation[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:107:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kvelocity[m[Kâ€™; did you mean â€˜[01m[Kcapacity[m[Kâ€™?
  joint_state_msg.[01;31m[Kvelocity[m[K.push_back(0.0);
                  [01;31m[K^~~~~~~~[m[K
                  [32m[Kcapacity[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:108:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kvelocity[m[Kâ€™; did you mean â€˜[01m[Kcapacity[m[Kâ€™?
  joint_state_msg.[01;31m[Kvelocity[m[K.push_back(0.0);
                  [01;31m[K^~~~~~~~[m[K
                  [32m[Kcapacity[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:109:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Keffort[m[Kâ€™
  joint_state_msg.[01;31m[Keffort[m[K.push_back(0);
                  [01;31m[K^~~~~~[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:110:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstruct sensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Keffort[m[Kâ€™
  joint_state_msg.[01;31m[Keffort[m[K.push_back(0);
                  [01;31m[K^~~~~~[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:112:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<sensor_msgs::msg::JointState_<std::allocator<void> > >::publish(sensor_msgs::msg::BatteryState_<std::allocator<void> >&)[m[Kâ€™
  joint_state->publish(joint_state_msg[01;31m[K)[m[K;
                                      [01;31m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/callback_group.hpp:24:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/memory_strategy.hpp:24[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executor.hpp:33[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/multi_threaded_executor.hpp:24[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:100:3:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::Publisher<MessageT, Alloc>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<T>::allocator_type>::rebind_alloc<T>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<T>::allocator_type> >::type>) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; Alloc = std::allocator<void>; typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<T>::allocator_type>::rebind_alloc<T>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<T>::allocator_type> >::type = std::default_delete<sensor_msgs::msg::JointState_<std::allocator<void> > >]
   [01;36m[Kpublish[m[K(std::unique_ptr<MessageT, MessageDeleter> msg)
   [01;36m[K^~~~~~~[m[K
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:100:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ to â€˜[01m[Kstd::unique_ptr<sensor_msgs::msg::JointState_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::JointState_<std::allocator<void> > > >[m[Kâ€™
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:137:3:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::Publisher<MessageT, Alloc>::publish(const std::shared_ptr<const _Tp>&) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; Alloc = std::allocator<void>]
   [01;36m[Kpublish[m[K(const std::shared_ptr<const MessageT> & msg)
   [01;36m[K^~~~~~~[m[K
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:137:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<const sensor_msgs::msg::JointState_<std::allocator<void> > >&[m[Kâ€™
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:143:3:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::Publisher<MessageT, Alloc>::publish(const MessageT&) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; Alloc = std::allocator<void>]
   [01;36m[Kpublish[m[K(const MessageT & msg)
   [01;36m[K^~~~~~~[m[K
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:143:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ to â€˜[01m[Kconst sensor_msgs::msg::JointState_<std::allocator<void> >&[m[Kâ€™
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:165:3:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::Publisher<MessageT, Alloc>::publish(const MessageT*) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; Alloc = std::allocator<void>]
   [01;36m[Kpublish[m[K(const MessageT * msg)
   [01;36m[K^~~~~~~[m[K
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:165:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ to â€˜[01m[Kconst sensor_msgs::msg::JointState_<std::allocator<void> >*[m[Kâ€™
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:174:3:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::Publisher<MessageT, Alloc>::publish(const rcl_serialized_message_t&) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; Alloc = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_t]
   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
   [01;36m[K^~~~~~~[m[K
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:174:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ to â€˜[01m[Kconst rcl_serialized_message_t& {aka const rcutils_uint8_array_t&}[m[Kâ€™
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:185:3:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::Publisher<MessageT, Alloc>::publish(const rcl_serialized_message_t*) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; Alloc = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_t]
   [01;36m[Kpublish[m[K(const rcl_serialized_message_t * serialized_msg)
   [01;36m[K^~~~~~~[m[K
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:185:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ to â€˜[01m[Kconst rcl_serialized_message_t* {aka const rcutils_uint8_array_t*}[m[Kâ€™
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:196:3:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::Publisher<MessageT, Alloc>::publish(std::shared_ptr<const rcutils_uint8_array_t>) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; Alloc = std::allocator<void>]
   [01;36m[Kpublish[m[K(std::shared_ptr<const rcl_serialized_message_t> serialized_msg)
   [01;36m[K^~~~~~~[m[K
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:196:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<const rcutils_uint8_array_t>[m[Kâ€™
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:112:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<sensor_msgs::msg::JointState_<std::allocator<void> > >::publish(sensor_msgs::msg::BatteryState_<std::allocator<void> >&)[m[Kâ€™
  joint_state->publish(joint_state_msg[01;31m[K)[m[K;
                                      [01;31m[K^[m[K
In file included from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/callback_group.hpp:24:0[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/memory_strategy.hpp:24[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executor.hpp:33[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors/multi_threaded_executor.hpp:24[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.hpp:2[m[K,
                 from [01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:5[m[K:
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:100:3:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::Publisher<MessageT, Alloc>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<T>::allocator_type>::rebind_alloc<T>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<T>::allocator_type> >::type>) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; Alloc = std::allocator<void>; typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<T>::allocator_type>::rebind_alloc<T>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<T>::allocator_type> >::type = std::default_delete<sensor_msgs::msg::JointState_<std::allocator<void> > >]
   [01;36m[Kpublish[m[K(std::unique_ptr<MessageT, MessageDeleter> msg)
   [01;36m[K^~~~~~~[m[K
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:100:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ to â€˜[01m[Kstd::unique_ptr<sensor_msgs::msg::JointState_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::JointState_<std::allocator<void> > > >[m[Kâ€™
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:137:3:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::Publisher<MessageT, Alloc>::publish(const std::shared_ptr<const _Tp>&) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; Alloc = std::allocator<void>]
   [01;36m[Kpublish[m[K(const std::shared_ptr<const MessageT> & msg)
   [01;36m[K^~~~~~~[m[K
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:137:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<const sensor_msgs::msg::JointState_<std::allocator<void> > >&[m[Kâ€™
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:143:3:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::Publisher<MessageT, Alloc>::publish(const MessageT&) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; Alloc = std::allocator<void>]
   [01;36m[Kpublish[m[K(const MessageT & msg)
   [01;36m[K^~~~~~~[m[K
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:143:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ to â€˜[01m[Kconst sensor_msgs::msg::JointState_<std::allocator<void> >&[m[Kâ€™
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:165:3:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::Publisher<MessageT, Alloc>::publish(const MessageT*) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; Alloc = std::allocator<void>]
   [01;36m[Kpublish[m[K(const MessageT * msg)
   [01;36m[K^~~~~~~[m[K
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:165:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ to â€˜[01m[Kconst sensor_msgs::msg::JointState_<std::allocator<void> >*[m[Kâ€™
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:174:3:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::Publisher<MessageT, Alloc>::publish(const rcl_serialized_message_t&) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; Alloc = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_t]
   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
   [01;36m[K^~~~~~~[m[K
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:174:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ to â€˜[01m[Kconst rcl_serialized_message_t& {aka const rcutils_uint8_array_t&}[m[Kâ€™
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:185:3:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::Publisher<MessageT, Alloc>::publish(const rcl_serialized_message_t*) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; Alloc = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_t]
   [01;36m[Kpublish[m[K(const rcl_serialized_message_t * serialized_msg)
   [01;36m[K^~~~~~~[m[K
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:185:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ to â€˜[01m[Kconst rcl_serialized_message_t* {aka const rcutils_uint8_array_t*}[m[Kâ€™
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:196:3:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::Publisher<MessageT, Alloc>::publish(std::shared_ptr<const rcutils_uint8_array_t>) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; Alloc = std::allocator<void>]
   [01;36m[Kpublish[m[K(std::shared_ptr<const rcl_serialized_message_t> serialized_msg)
   [01;36m[K^~~~~~~[m[K
[01m[K/home/turtlebot2/ros2_ws/install/rclcpp/include/rclcpp/publisher.hpp:196:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::BatteryState_<std::allocator<void> >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<const rcutils_uint8_array_t>[m[Kâ€™
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:[m[K In member function â€˜[01m[Kvoid Turtlebot::publishInertial()[m[Kâ€™:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:159:7:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kflag[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  bool [01;35m[Kflag[m[K = (int)InertialAngleRate;
       [01;35m[K^~~~[m[K
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:[m[K In member function â€˜[01m[Kvoid Turtlebot::publishInertial()[m[Kâ€™:
[01m[K/home/turtlebot2/Desktop/turtlebot2_ros2/src/Turtlebot.cpp:159:7:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kflag[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  bool [01;35m[Kflag[m[K = (int)InertialAngleRate;
       [01;35m[K^~~~[m[K
CMakeFiles/turtlebot2.dir/build.make:86: recipe for target 'CMakeFiles/turtlebot2.dir/src/Turtlebot.cpp.o' failed
make[2]: *** [CMakeFiles/turtlebot2.dir/src/Turtlebot.cpp.o] Error 1
make[2]: *** Waiting for unfinished jobs....
make[2]: *** [CMakeFiles/Turtlebot.dir/src/Turtlebot.cpp.o] Error 1
CMakeFiles/Turtlebot.dir/build.make:62: recipe for target 'CMakeFiles/Turtlebot.dir/src/Turtlebot.cpp.o' failed
CMakeFiles/Makefile2:432: recipe for target 'CMakeFiles/Turtlebot.dir/all' failed
make[1]: *** [CMakeFiles/Turtlebot.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
CMakeFiles/Makefile2:469: recipe for target 'CMakeFiles/turtlebot2.dir/all' failed
make[1]: *** [CMakeFiles/turtlebot2.dir/all] Error 2
Makefile:140: recipe for target 'all' failed
make: *** [all] Error 2
Invoked command in '/home/turtlebot2/Desktop/turtlebot2_ros2/build/turtlebot_bringup' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/turtlebot2/ros2_ws/install/ros2bag:/home/turtlebot2/ros2_ws/install/topic_monitor:/home/turtlebot2/ros2_ws/install/sros2:/home/turtlebot2/ros2_ws/install/rqt:/home/turtlebot2/ros2_ws/install/rqt_graph:/home/turtlebot2/ros2_ws/install/rqt_gui_py:/home/turtlebot2/ros2_ws/install/rqt_gui:/home/turtlebot2/ros2_ws/install/ros2topic:/home/turtlebot2/ros2_ws/install/ros2test:/home/turtlebot2/ros2_ws/install/ros2component:/home/turtlebot2/ros2_ws/install/ros2param:/home/turtlebot2/ros2_ws/install/ros2lifecycle:/home/turtlebot2/ros2_ws/install/ros2service:/home/turtlebot2/ros2_ws/install/ros2srv:/home/turtlebot2/ros2_ws/install/ros2run:/home/turtlebot2/ros2_ws/install/ros2launch:/home/turtlebot2/ros2_ws/install/ros2pkg:/home/turtlebot2/ros2_ws/install/ros2node:/home/turtlebot2/ros2_ws/install/ros2multicast:/home/turtlebot2/ros2_ws/install/ros2msg:/home/turtlebot2/ros2_ws/install/ros2action:/home/turtlebot2/ros2_ws/install/ros2cli:/home/turtlebot2/ros2_ws/install/quality_of_service_demo_py:/home/turtlebot2/ros2_ws/install/launch_testing_ros:/home/turtlebot2/ros2_ws/install/launch_ros:/home/turtlebot2/ros2_ws/install/examples_rclpy_minimal_subscriber:/home/turtlebot2/ros2_ws/install/examples_rclpy_minimal_service:/home/turtlebot2/ros2_ws/install/examples_rclpy_minimal_publisher:/home/turtlebot2/ros2_ws/install/examples_rclpy_minimal_client:/home/turtlebot2/ros2_ws/install/examples_rclpy_minimal_action_server:/home/turtlebot2/ros2_ws/install/examples_rclpy_minimal_action_client:/home/turtlebot2/ros2_ws/install/examples_rclpy_executors:/home/turtlebot2/ros2_ws/install/demo_nodes_py:/home/turtlebot2/ros2_ws/install/ament_uncrustify:/home/turtlebot2/ros2_ws/install/test_launch_ros:/home/turtlebot2/ros2_ws/install/rosidl_runtime_py:/home/turtlebot2/ros2_ws/install/launch_testing:/home/turtlebot2/ros2_ws/install/launch:/home/turtlebot2/ros2_ws/install/osrf_pycommon:/home/turtlebot2/ros2_ws/install/ament_xmllint:/home/turtlebot2/ros2_ws/install/ament_pyflakes:/home/turtlebot2/ros2_ws/install/ament_pep8:/home/turtlebot2/ros2_ws/install/ament_pep257:/home/turtlebot2/ros2_ws/install/ament_pclint:/home/turtlebot2/ros2_ws/install/ament_package:/home/turtlebot2/ros2_ws/install/ament_lint_cmake:/home/turtlebot2/ros2_ws/install/ament_flake8:/home/turtlebot2/ros2_ws/install/ament_copyright:/home/turtlebot2/ros2_ws/install/ament_lint:/home/turtlebot2/ros2_ws/install/ament_index_python:/home/turtlebot2/ros2_ws/install/ament_cpplint:/home/turtlebot2/ros2_ws/install/ament_cppcheck:/home/turtlebot2/ros2_ws/install/ament_clang_tidy:/home/turtlebot2/ros2_ws/install/ament_clang_format /usr/bin/cmake --build /home/turtlebot2/Desktop/turtlebot2_ros2/build/turtlebot_bringup -- -j4 -l4
